import{_ as t,o as s,c as l,a as e,b as a,d as r,e as n,r as d}from"./app.3f86f1b7.js";var h="/assets/zahlungskanal-lebenszyklus.b54c6ebc.png",c="/assets/eroeffnungstransaktion.5afdc04e.png",u="/assets/verbindlichkeit-1.f746268e.png",o="/assets/verbindlichkeit-2.8828e5e1.png",g="/assets/schliessung-kooperativ.14bd31e9.png",k="/assets/schliessung-erzwungen.1b852199.png",m="/assets/schliessung-vertragsbruch-1.0a46cf4b.png",p="/assets/schliessung-vertragsbruch-2.113d0370.png";const b={},f=r('<h1 id="der-lebenszyklus-eines-zahlungskanals-im-lightning-netzwerk" tabindex="-1"><a class="header-anchor" href="#der-lebenszyklus-eines-zahlungskanals-im-lightning-netzwerk" aria-hidden="true">#</a> Der Lebenszyklus eines Zahlungskanals im Lightning Netzwerk</h1><p>Das Lightning Netzwerk baut auf der Bitcoin Blockchain auf und erweitert diese Basisebene mit dem Ziel der Skalierbarkeit: Es erm\xF6glicht schnellere Transaktionen und geringere Geb\xFChren, die durch ein Netzwerk aus bidirektionalen Zahlungskan\xE4len m\xF6glich werden. Dieser Artikel erkl\xE4rt dir den Aufbau und Lebenszyklus eines solchen Zahlungskanals.</p><p>Ein Zahlungskanal besteht jeweils zwischen zwei Parteien (bspw. zwischen K\xE4ufer und Verk\xE4ufer) und kann f\xFCr beliebig viele Zahlungen unter ihnen genutzt werden. In der Regel wird solch ein Kanal seitens der Partei erstellt, die regelm\xE4\xDFig Zahlungen an die andere Partei durchf\xFChren m\xF6chte.</p><p>Alles beginnt mit dem Abzweigen von der Blockchain in das Lightning Netzwerk bei der Erstellung eines Zahlungskanals. Aus der Vogelperspektive l\xE4sst sich dies sehr einfach darstellen:</p><p><img src="'+h+'" alt="Der Lebenszyklus eines Zahlungskanals im Lightning Netzwerk"></p><p>Sehen wir uns das Ganze im Detail an \u2026</p><h2 id="die-eroffnungstransaktion" tabindex="-1"><a class="header-anchor" href="#die-eroffnungstransaktion" aria-hidden="true">#</a> Die Er\xF6ffnungstransaktion</h2><p><mark>Bei der Er\xF6ffnung eines Zahlungskanals wird eine Multisignatur-Wallet f\xFCr die beiden am Kanal beteiligten Parteien erzeugt.</mark> Diese Multisignatur-Wallet erstellt dabei drei Transaktionen, von denen jedoch vorerst nur eine \u2014 die <em>Er\xF6ffnungstransaktion</em> \u2014 auf der Blockchain ver\xF6ffentlicht wird.</p><p>Die beiden weiteren Transaktionen werden als <em>Verbindlichkeitstransaktionen</em> bezeichnet und jeweils von den beiden Parteien einbehalten. Diese Verbindlichkeitstransaktionen kann man sich wie eine laufend fortgef\xFChrte Abrechnungstabelle vorstellen. Sie werden sp\xE4ter bei der Kanalschlie\xDFung genutzt, um den Zahlungsstand der beiden Kanalpartnern abzurechnen. Eine oft genutzte Metapher daf\xFCr ist das Anschreiben lassen in einer Bar und das Bezahlen der Rechnung am Ende des Abends.</p><p>Visualisieren wir es mit dem folgenden Beispiel, in dem Alice einen Kanal mit 10 mBTC (10 Milli-Bitcoin, also 1 Millionen Sats) zu Bob er\xF6ffnet \u2026</p><p><img src="'+c+'" alt="Er\xF6ffnungstransaktion"></p><p>Beide Partei haben jeweils ein <em>Secret</em>, mit dem sie einen <em>Hash</em> f\xFCr ihre Verbindlichkeitstransaktion generieren. Der Hash wird untereinander ausgetauscht, das Secret beh\xE4lt vorerst jede Partei f\xFCr sich.</p><p>Sobald die Er\xF6ffnungstransaktion gen\xFCgend Best\xE4tigungen hat, gilt der Zahlungskanal als offen und kann genutzt werden.</p>',13),w={class:"custom-container tip"},v=e("p",{class:"custom-container-title"},"Zusatzinformation",-1),z=n("Aktuell kann nur eine der beteiligten Parteien das Geld f\xFCr die Er\xF6ffnung eines neuen Zahlungskanals bereitstellen. Zuk\xFCnftige Versionen der "),B={href:"https://github.com/lightningnetwork/lightning-rfc",target:"_blank",rel:"noopener noreferrer"},_=n("Lightning Network Spezifikation"),S=n(" sehen aber das \xD6ffnen von beidseitig finanzierten Kan\xE4len vor."),A=r('<h2 id="verbindlichkeitstransaktionen" tabindex="-1"><a class="header-anchor" href="#verbindlichkeitstransaktionen" aria-hidden="true">#</a> Verbindlichkeitstransaktionen</h2><p>Bob sendet Alice eine Rechnung \xFCber 4 mBTC, welche Alice daraufhin bezahlt.</p><p><mark>Im Zuge der Zahlung wird der neue Transaktionshash, sowie das vorherige Secret ausgetauscht.</mark> Das erhaltene Secret stellt f\xFCr die Kanalpartner jeweils den Widerrufungsschl\xFCssel dar. Jede neue Verbindlichkeitstransaktion invalidiert die vorherigen, da das nun bekannte Secret dazu genutzt werden kann, die bisherigen Transaktionen des Zahlungskanals zu widerrufen.</p><p><img src="'+u+'" alt="Verbindlichkeitstransaktion Nr. 1: Es wird der neue Transaktionshash, sowie das vorherige Secret ausgetauscht."></p><p>Nach der ersten Transaktion innerhalb des Kanals, bei der sich die Verteilung der Betr\xE4ge ge\xE4ndert hat, sieht der Stand von Alice&#39;s Verbindlichkeitstransaktion nun folgenderma\xDFen aus:</p><ul><li>4 mBTC f\xFCr Bob und</li><li>entweder: 6 mBTC f\xFCr Alice nach 1000 Bl\xF6cken</li><li>oder: 6 mBTC f\xFCr Bob wenn er Alice&#39;s Secret kennt</li></ul><p>Bob&#39;s Verbindlichkeitstransaktion ist das exakte Gegenteil zu Alice&#39;s Stand:</p><ul><li>6 mBTC f\xFCr Alice und</li><li>entweder: 4 mBTC f\xFCr Bob nach 1000 Bl\xF6cken</li><li>oder: 4 mBTC f\xFCr Alice wenn sie Bob&#39;s Secret kennt</li></ul><p>Das macht Spa\xDF \u2013\xA0weiter geht&#39;s und wir sehen uns an, was es mit diesen magischen <em>1000 Bl\xF6cken Wartezeit</em> (etwa 7 Tage) auf sich hat \u2026</p><p><img src="'+o+'" alt="Verbindlichkeitstransaktion Nr. 2: Wieder wird der neue Transaktionshash, sowie das vorherige Secret ausgetauscht."></p><p>Nach einer erneuten Zahlung \xFCber 4 mBTC von Alice an Bob sieht Alice&#39;s Stand so aus:</p><ul><li>8 mBTC f\xFCr Bob und</li><li>entweder: 2 mBTC f\xFCr Alice nach 1000 Bl\xF6cken</li><li>oder: 2 mBTC f\xFCr Bob wenn er Alice&#39;s Secret kennt</li></ul><p>Die 1000 Bl\xF6cken Wartezeit werden nun interessant, wenn es zu einem der m\xF6glichen Szenarien der Kanalschlie\xDFung kommt \u2026</p><h2 id="kanalschlie\xDFung" tabindex="-1"><a class="header-anchor" href="#kanalschlie\xDFung" aria-hidden="true">#</a> Kanalschlie\xDFung</h2><p>Es gibt mehrere M\xF6glichkeiten, wie es zu einer Kanalschlie\xDFung im Lightning Netzwerk kommen kann. Fangen wir mit dem einfachsten und \xFCblichsten Szenario an \u2026</p><h3 id="kooperative-kanalschlie\xDFung" tabindex="-1"><a class="header-anchor" href="#kooperative-kanalschlie\xDFung" aria-hidden="true">#</a> Kooperative Kanalschlie\xDFung</h3><p>Hierbei handelt es sich um den Idealfall, welcher in der Regel auch zustande kommt: <mark>Eine beidseitige und einvernehmliche Schlie\xDFung, welche von beiden Kanalpartnern durch das Ver\xF6ffentlichen ihrer jeweils aktuellen Verbindlichkeitstransaktion initiiert wird.</mark></p><p>Die Multisignatur-Wallet erzeugt ihre letzte Transaktion und zahlt den beiden Parteien ihre jeweils zustehenden Betr\xE4ge wieder on-chain aus. Beide Parteien sind gl\xFCcklich und die Kanalschlie\xDFung wird mit der Blockchain-Best\xE4tigung der schlie\xDFenden Transaktion vollzogen.</p><p><img src="'+g+'" alt="Kooperative Kanalschlie\xDFung: Alice und Bob ver\xF6ffentlichen ihre jeweils aktuellen Verbindlichkeitstransaktion."></p><h3 id="erzwungene-kanalschlie\xDFung" tabindex="-1"><a class="header-anchor" href="#erzwungene-kanalschlie\xDFung" aria-hidden="true">#</a> Erzwungene Kanalschlie\xDFung</h3><p>Sagen wir Alice&#39;s Node verschwindet und Bob kann daher nicht den einvernehmlichen und kooperativen Weg gehen: Er kann den Kanal nicht mehr nutzen und muss die Schlie\xDFung seinerseits erzwingen, um sich seinen Teil der Verbindlichkeiten wieder on-chain auszahlen zu lassen.</p><p>In diesem Fall kommen die 1000 Bl\xF6cken Wartezeit (etwa 7 Tage) ins Spiel, die wiederum Alice die Chance geben, auf diese einseitig initiierte Schlie\xDFung zu reagieren und sie ggf. zu widerrufen.</p><p><img src="'+k+'" alt="Erzwungene Kanalschlie\xDFung: Bob ver\xF6ffentlicht seine aktuelle Verbindlichkeitstransaktion."></p><p>Kommt Alice in dieser Zeit nicht wieder online oder sie akzeptiert den von Bob ver\xF6ffentlichten Stand, wird der Kanal nach 1000 Bl\xF6cken regul\xE4r geschlossen und die beiden Parteien bekommen on-chain ihre jeweiligen Betr\xE4ge (auf Basis von Bob&#39;s Verbindlichkeitstransaktion) ausgezahlt.</p><p>Aber Moment \u2026</p><h3 id="was-passiert-wenn-ein-falscher-stand-veroffentlicht-wird" tabindex="-1"><a class="header-anchor" href="#was-passiert-wenn-ein-falscher-stand-veroffentlicht-wird" aria-hidden="true">#</a> Was passiert wenn ein falscher Stand ver\xF6ffentlicht wird?</h3><p>Nehmen wir an Bob&#39;s Node verschwindet und Alice ver\xF6ffentlicht einen veralteten Stand, welcher sie bevorteilt. Dies kann entweder beabsichtigt vorkommen (das w\xE4re gemein, um nicht zu sagen Betrug) oder versehentlich, bspw. durch das Wiederherstellen eines veralteten Stands aus einem Backup.</p><p><img src="'+m+'" alt="Schlie\xDFung des Zahlungskanals mit einem veralteten Stand"></p><p>Die 1000 Bl\xF6cke Wartezeit geben Bob nun die Gelegenheit, seinerseits wieder online zu kommen und den von Alice ver\xF6ffentlichten Stand zu widerrufen: Er kennt und ver\xF6ffentlicht daf\xFCr das Secret f\xFCr Alice&#39;s veraltete Verbindlichkeitstransaktion und kann somit nachweisen, dass dies nicht die aktuellste Version ist.</p><p><img src="'+p+'" alt="Bestrafung f\xFCr das Schlie\xDFen des Zahlungskanals mit einem veralteten Stand"></p><p>Um eben solche Betrugsversuche zu unterbinden, setzt das Lightning Protokoll auf eine harte Strafe: Wird ein solcher Fall von der benachteiligten Partei aufgedeckt, resultiert es in der Beschlagnahmung des kompletten Kanalbetrags. In diesem Fall w\xFCrde es bedeuten, dass die gesamten 10 mBTC an Bob gehen.</p><div class="custom-container warning"><p class="custom-container-title">Warnung</p><p>Dabei ist es auch egal, ob Alice vors\xE4tzlich oder versehentlich den veralteten Stand ver\xF6ffentlicht hat \u2014 hier gilt es also insbesondere bei der Datenmigration oder dem Einspielen von Backups aufzupassen!</p></div><p>Ok, so viel zum Lebenslauf und den verschiedenen Zust\xE4nden eines Zahlungskanals. Ich hoffe die Diagramme machen dieses eher technische Thema etwas zug\xE4nglicher.</p>',33),T=n("Wenn dich das Ganze noch mal im Detail interessiert, kannst du dir "),V={href:"https://anchor.fm/plebs-taverne/episodes/TechTuesday---Lightning-Netzwerk-erklrt-e1kqf2b",target:"_blank",rel:"noopener noreferrer"},K=n("diese Folge der Pleb's Taverne"),Z=n(" anh\xF6ren. Dort erkl\xE4ren Cercatrova und Kid diese Aspekte ebenfalls und bieten auch weitere anschauliche Beispiele.");function E(D,N){const i=d("ExternalLinkIcon");return s(),l("div",null,[f,e("div",w,[v,e("p",null,[z,e("a",B,[_,a(i)]),S])]),A,e("p",null,[T,e("a",V,[K,a(i)]),Z])])}var C=t(b,[["render",E],["__file","index.html.vue"]]);export{C as default};
