import{_ as s,o as d,c as l,a as n,b as i,w as h,e,d as u,r}from"./app.e4a622c0.js";var g="/assets/routing-A-B-C-1.4cf41548.png",o="/assets/routing-A-B-C-2.c8b6b1c3.png",c="/assets/routing-A-B-C-3.d4ff199a.png";const m={},p=n("h1",{id:"wie-kapazitat-und-liquiditat-das-routing-im-lightning-netzwerk-bestimmen",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#wie-kapazitat-und-liquiditat-das-routing-im-lightning-netzwerk-bestimmen","aria-hidden":"true"},"#"),e(" Wie Kapazit\xE4t und Liquidit\xE4t das Routing im Lightning Netzwerk bestimmen")],-1),b=e("Lightning erm\xF6glicht schnellere Transaktionen und geringere Geb\xFChren, die durch ein Netzwerk aus bidirektionalen Zahlungskan\xE4len m\xF6glich werden. Im Artikel zum "),k=e("Lebenszyklus eines Zahlungskanals im Lightning Netzwerk"),f=e(" erf\xE4hrst du, wie Zahlungen grunds\xE4tzlich funktionieren."),w=u('<p>\xDCber die Zahlungen innerhalb eines Kanals hinaus, kann man auch \xFCber die Verbindungen der Kan\xE4le bezahlen: Routing erm\xF6glicht Zahlungen an Parteien, mit denen man nicht direkt verbunden ist \u2014 daher auch die Bezeichnung als Lightning Netzwerk.</p><p>So ist es auch m\xF6glich, \xFCber mehrere Knoten im Netzwerk hinweg jemanden anders zu bezahlen oder Geld zu empfangen. Dabei spielen jedoch zwei Faktoren eine entscheidende Rolle: Dieser Artikel erkl\xE4rt dir, wie das Routing von der <em>Kapazit\xE4t</em> und <em>Liquidit\xE4t</em> der Zahlungskan\xE4le bestimmt wird.</p><h2 id="definitionen" tabindex="-1"><a class="header-anchor" href="#definitionen" aria-hidden="true">#</a> Definitionen</h2><p><mark><strong>Kapazit\xE4t</strong> ist definiert als der Gesamtbetrag, den ein Zahlungskanal beinhaltet.</mark> Bei der Kanal\xF6ffnung wird die Kapazit\xE4t festgelegt, danach ist sie fix und kann zumindest mit dem aktuellen Stand der Lightning-Implementierung nicht nachtr\xE4glich angepasst werden. Dieser Gesamtbetrag wird im Lightning Netzwerk in der Einheit Millisatoshi (msat) gef\xFChrt.</p><p>Mit der <strong>Verteilung</strong> wird beschrieben, wie der Gesamtbetrag unter den beiden Kanalpartnern aufgeteilt ist. Diese Verteilung betrifft auch die <strong>Liquidit\xE4t</strong>, da wir zwischen <em>eingehender und ausgehender Liquidit\xE4t</em> unterscheiden m\xFCssen.</p><p>Aus der Perspektive des Benutzers ist die <mark><strong>eingehende Liquidit\xE4t</strong> der Betrag auf der anderen Seite des Kanals \u2014 also der Teil des Geldes, den man vom Gegen\xFCber empfangen kann.</mark> Um ein Beispiel zu nennen: Verk\xE4ufer ben\xF6tigen prim\xE4r eingehende Liquidit\xE4t, um Geld von ihren Kunden empfangen zu k\xF6nnen.</p><p>Als das exakte Gegenst\xFCck dazu ist die <mark><strong>ausgehende Liquidit\xE4t</strong> der Betrag auf der eigenen Seite des Kanals \u2014 also der Teil des Geldes, den man selbst versenden kann.</mark> Als normaler Nutzer oder Kunde ben\xF6tigt man vorwiegend ausgehende Liquidit\xE4t, um Zahlungen zu machen und Eink\xE4ufe zu erledigen.</p><p><strong>Routing</strong> beschreibt den Prozess einen Pfad f\xFCr die Zahlung \xFCber Kanalgrenzen hinweg zu finden. Dieses Pfadfinden wird durch die <em>Kapazit\xE4t</em> und <em>Liquidit\xE4t</em> aller Kan\xE4le/Zwischenschritte auf dem Weg bestimmt, wobei die generelle Aussage gilt: Je l\xE4nger der Pfad (also je h\xF6her die Anzahl der Zwischenschritte) ist, desto eingeschr\xE4nkter sind die M\xF6glichkeiten, die sich f\xFCr ein erfolgreiches Routing ergeben.</p><div class="custom-container tip"><p class="custom-container-title">Hinweis</p><p>Hash Time-Locked Contracts (kurz: HTLC) werden verwendet, um das Geld auf dem Weg zu sichern. Sie stellen sicher, dass das Geld auf dem Weg zum Zahlungsempf\xE4nger nicht gestohlen wird. Die Knotenpunkte entlang der Route k\xF6nnen Geb\xFChren als Provision f\xFCr ihre Dienstleistung erheben. Diese Geb\xFChren sind auch im HTLC enthalten, die jeder Knoten auf dem Weg empf\xE4ngt und weitergibt.</p></div><h2 id="einschrankungen-fur-das-routing" tabindex="-1"><a class="header-anchor" href="#einschrankungen-fur-das-routing" aria-hidden="true">#</a> Einschr\xE4nkungen f\xFCr das Routing</h2><p>Nach diese Definitionen gekl\xE4rt sind, kann auch eine Analogie helfen, um einen weiteren wichtigen Punkt beim Verschieben des Geldes zu verstehen: <mark>Stell dir die Kapazit\xE4t in einem Zahlungskanal als Perlen auf einer Schnur vor.</mark> Oder f\xFCr die \xC4lteren unter uns: wie Perlen in einem Abakus. \xA0\u{1F9EE}<br> Sie k\xF6nnen von einer Seite zur anderen wandern, aber sie verlassen die Schnur nicht, <em>selbst wenn sie weitergeleitet werden</em>.</p><p>Die Anzahl der Perlen ist festgelegt (Kapazit\xE4t), und die Seite auf der sie sich befinden (Verteilung), symbolisiert entweder die eingehende oder die ausgehende Liquidit\xE4t.</p><p>Genug der trockenen Theorie, werfen wir einen Blick auf ein praktisches Beispiel: Das folgende Diagramm zeigt einen Fall, in dem Alice (<strong>A</strong>) an Charlie (<strong>C</strong>) einen Betrag von 4 mBTC zahlen m\xF6chte (4 Milli-Bitcoin, also 4 Millionen Sats \u2014 die Einheit f\xFCr die Beispiele ist willk\xFCrlich).</p><p>Das Guthaben ihres eigenen Kanals mit Charlie reicht nicht aus: Sie hat nur eine ausgehende Liquidit\xE4t von 2 (rote Linie). Ihr Kanal mit Bob (<strong>B</strong>) hat jedoch eine ausgehende Liquidit\xE4t von 6, so dass die Zahlung diesen Weg einschlagen kann (gestrichelte gr\xFCne Linie).</p><p><img src="'+g+'" alt="Alice muss \xFCber Bob routen, um 4 mBTC an Charlie zu senden."></p><p>Alice muss \xFCber Bob routen, um 4 mBTC an Charlie zu senden. Sie erstellt also eine Verbindlichkeitstransaktion mit einer HTLC, die Charlie den Betrag von 4 mBTC gew\xE4hrt. Alice sendet diese an Bob, damit er sie weitergeben kann.</p><p>Zu diesem Zeitpunkt k\xF6nnte die Zahlung immer noch scheitern: N\xE4mlich in dem Fall, dass Bobs ausgehende Kapazit\xE4t zu Charlie nicht ausreichen w\xFCrde (gestrichelte graue Linie).</p><p>Was die meisten Menschen in ihrem Verst\xE4ndnis st\xF6rt: Bob kann die 4 mBTC, die er von Alice erhalten hat, nicht nehmen und sie in seinen Kanal mit Charlie verschieben und weitergeben. <mark>Der Betrag kann nicht direkt den Kanal wechseln, da die Kapazit\xE4t eines jeden Kanals festgelegt ist.</mark> Die Weiterleitung funktioniert nur, wenn Bob&#39;s ausgehende Kapazit\xE4t in seinem Kanal mit Charlie auch mindestens 4 mBTC betr\xE4gt \u2026</p><h2 id="anderung-der-verteilung" tabindex="-1"><a class="header-anchor" href="#anderung-der-verteilung" aria-hidden="true">#</a> \xC4nderung der Verteilung</h2><p>Alice hat Gl\xFCck, denn Bob hat eine ausgehende Kapazit\xE4t von 5 mBTC in seinem Kanal mit Charlie. Die Zahlung wird weitergeleitet, wie in der folgenden Abfolge von Diagrammen zu sehen ist.</p><p><img src="'+o+'" alt="Alice zahlt Bob 4 mBTC (gr\xFCne Linie) und Bob zahlt Charlie 4 mBTC (gestrichelte gr\xFCne Linie)."></p><p>Alice zahlt Bob 4 mBTC (gr\xFCne Linie) und Bob zahlt Charlie 4 mBTC (gestrichelte gr\xFCne Linie).</p><p>So sieht die Verteilung aus, nachdem die Weiterleitung erfolgreich durchgef\xFChrt wurde:</p><p><img src="'+c+'" alt="Alice&#39;s Weiterleitung \xFCber Bob hat die Verteilung zwischen Bob und Charlie angepasst."></p><p>Alice&#39;s Weiterleitung \xFCber Bob hat die Verteilung zwischen Bob und Charlie angepasst.</p><div class="custom-container tip"><p class="custom-container-title">Hinweis</p><p>Aufgrund der HTLCs sind die Routing-Operationen atomar. Das bedeutet, dass entweder die gesamte Weiterleitung erfolgreich ist oder nichts passiert. Um eine verst\xE4ndlichere Erkl\xE4rung zu geben, zeigen die Diagramme jedoch einen schrittweisen Weg der \xDCbertragung.</p></div><p>Wie wir sehen k\xF6nnen, hat die Weiterleitung der Zahlung von Alice an Charlie \xFCber Bob die Salden aller Kan\xE4le auf dem Weg ver\xE4ndert:</p><ul><li>A-B \xE4nderte sich von 6-4 zu 2-8</li><li>B-C \xE4nderte sich von 5-5 zu 1-9</li></ul><p>Dies ist insbesondere f\xFCr eine weitere Art von Akteuren im Netzwerk von Bedeutung: Die Betreiber von Routingknoten m\xFCssen ihre Kan\xE4le fortw\xE4hrend ausbalancieren, um die richtige Art von Liquidit\xE4t f\xFCr den jeweiligen Geldfluss zu gew\xE4hrleisten.</p><p>Um diese Punkte kurz zusammenzufassen, k\xF6nnte man sagen:</p><ul><li>H\xE4ndler brauchen eingehende Liquidit\xE4t.</li><li>Kunden ben\xF6tigen ausgehende Liquidit\xE4t.</li><li>Routingkonten-Betreiber m\xFCssen die Verteilungen f\xFCr die Geldstr\xF6me anpassen.</li></ul>',31),z=e("Diese Punkte sind derzeit ein gro\xDFes Thema beim Aufbau der Kan\xE4le eines neuen Lightning-Knotens: Da Kanalkapazit\xE4t und Liquidit\xE4t die einschr\xE4nkenden Faktoren sind, gibt es Dienste, die auf die Bed\xFCrfnisse von H\xE4ndlern eingehen: Der Kanal\xF6ffnungsdienst "),_={href:"https://www.bitrefill.com/thor-lightning-network-channels/",target:"_blank",rel:"noopener noreferrer"},B=e("Thor von Bitrefill"),v=e(" war meines Wissens nach der erste und wurde schnell von "),L={href:"https://blog.lightning.engineering/posts/2019/03/20/loop.html",target:"_blank",rel:"noopener noreferrer"},K=e("Lightning Labs' Loop"),C=e(" gefolgt."),A=n("h2",{id:"zukunftige-entwicklung",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#zukunftige-entwicklung","aria-hidden":"true"},"#"),e(" Zuk\xFCnftige Entwicklung")],-1),D=n("p",null,"Aber nicht nur H\xE4ndler sind auf eingehende Liquidit\xE4t angewiesen. Wie wir gesehen haben, sto\xDFen die Kunden aufgrund der L\xE4nge ihres Zahlungsweges an Grenzen.",-1),T=e("Um dies zu beheben, wird bereits an L\xF6sungen wie "),Z={href:"https://lightning.engineering/posts/2020-05-07-mpp/",target:"_blank",rel:"noopener noreferrer"},G=e("Multi-Path Payments"),W=e(" gearbeitet: Statt \xFCber eine einzige Route zu gehen, kann der gesendete Betrag aufgeteilt werden und mehrere verschiedene Routen nehmen. Auf diese Weise werden gr\xF6\xDFere Zahlungen erm\xF6glicht, da die Kapazit\xE4t und die Verteiliung mehrerer Kan\xE4le ber\xFCcksichtigt werden k\xF6nnen. Ein Beispiel: Mit MPP k\xF6nnte die Zahlung von Alice an Charlie so aufgeteilt werden, dass 2 mBTC \xFCber Bob gehen und die anderen 2 mBTC \xFCber einen anderen Knoten "),q=n("strong",null,"D",-1),S=e(" als Zwischenschritt."),V=n("p",null,"Dies ist nur eines von vielen spannenden Features, die derzeit ihren Weg in die Lightning Network Spezifikation finden. \u{1F600}",-1);function P(x,N){const a=r("RouterLink"),t=r("ExternalLinkIcon");return d(),l("div",null,[p,n("p",null,[b,i(a,{to:"/anleitung/lightning-network-zahlungskanal/"},{default:h(()=>[k]),_:1}),f]),w,n("p",null,[z,n("a",_,[B,i(t)]),v,n("a",L,[K,i(t)]),C]),A,D,n("p",null,[T,n("a",Z,[G,i(t)]),W,q,S]),V])}var E=s(m,[["render",P],["__file","index.html.vue"]]);export{E as default};
